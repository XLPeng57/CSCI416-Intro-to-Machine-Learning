{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Imports\n",
    "Run this code to import necessary modules. Note that the functions ``cost_function`` and ``gradient`` imported from module ``gd`` are stubs. You will need to fill in the code in ``gd.py``."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from IPython.display import display, clear_output\n",
    "\n",
    "from gd import cost_function, gradient  # stubs"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Create a simple data set\n",
    "\n",
    "Run this cell to generate and plot some data from the linear model $y \\approx -1 + 2x$, that is, $\\theta_0 = -1$ and  $\\theta_1 = 2$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXkAAAD4CAYAAAAJmJb0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAPP0lEQVR4nO3df2zc913H8ddrroFjDN1QzbZcUlKhYlEIzMyqQJFg0B9ut2rxMiG1E1MlkMIfrbRJzBDTP+CfKREGxh9MQEATkxhUlZq40zrmtUun/TNgztwtCa1ZVDqac6GuwDCJE3PdN3/4nDjunZM73/fHfb7Ph1TF9z3nPm9fpZe/eX8+9/k4IgQASNNbii4AAJAdQh4AEkbIA0DCCHkASBghDwAJu6noAra7+eab4+DBg0WXAQBD5dy5c69FxFin50oV8gcPHtTi4mLRZQDAULH9nW7P0a4BgIQR8gCQMEIeABJGyANAwgh5AEhYqVbXAEDVzC81NbewrJW1lvbVa5qZGtf0RGNgr0/IA0BB5peamj19Xq31DUlSc62l2dPnJWlgQU+7BgAKMrewfCXgt7TWNzS3sDywMQh5ACjIylqrp+v9IOQBoCD76rWervdjICFv+9O2X7V9Ydu1H7H9tO1vt/98+yDGAoBUzEyNqzY6cs212uiIZqbGBzbGoO7k/1rSvTuuHZf05Yi4TdKX248BAG3TEw2dOHpIjXpNltSo13Ti6KHyra6JiK/aPrjj8hFJ721//RlJX5H0O4MYDwBSMT3RGGio75RlT/4dEfGKJLX//NFO32T7mO1F24urq6sZlgMA1VP4xGtEnIqIyYiYHBvruB0yAKBPWYb8f9h+lyS1/3w1w7EAAB1kGfKfk/RQ++uHJD2Z4VgAgA4GtYTy7yR9TdK47cu2f0PSSUl32/62pLvbjwEAORrU6poHuzx15yBeHwDQHzYoA4ABynpXyV4R8gAwIHnsKtmrwpdQAkAq8thVsleEPAAMSB67SvaKkAeAAcljV8leEfIAMCB57CrZKyZeAWBAtiZXWV0DAInKelfJXtGuAYCEEfIAkDBCHgASRsgDQMIIeQBIGCEPAAkj5AEgYYQ8ACSMkAeAhBHyAJAwQh4AEkbIA0DCCHkASBghDwAJY6thANDmIdxl2gd+UAh5AJU3v9TU7OnzVw7hbq61NHv6vCQNfdDTrgFQeXMLy1cCfktrfUNzC8sFVTQ4hDyAyltZa/V0fZjQrgFQefvqNTU7BPq+ek3ScPfruZMHUHkzU+OqjY5cc602OqKZqfEr/frmWkuhq/36+aVmMcX2iJAHUHnTEw2dOHpIjXpNltSo13Ti6CFNTzSGvl9PuwYAtBn0nVoww96v504eAHax1Ze/0etlQ8gDwC5269cPA9o1ALCLrRbOsK6uIeQB4Dq69euHAe0aAEgYIQ8ACcu8XWP7JUnflbQh6fWImMx6TADAprx68r8cEa/lNBaAhAzzlgJlwMQrgNJKeQvgvOTRkw9JX7J9zvaxnU/aPmZ70fbi6upqDuUAGBbDvqVAGeQR8ocj4uck3SfpYdu/uP3JiDgVEZMRMTk2NpZDOQCGxbBvKVAGmYd8RKy0/3xV0hlJd2Q9JoA0DPuWAmWQacjbfqvtt219LekeSReyHBNAOoZ9S4EyyHri9R2SztjeGutvI+KLGY8JYIjtXE3zofc09OwLq6yu6VOmIR8RL0r62SzHAJCOTqtpnjjXvLK3O3rHJ14BlAaraQaPkAdQGqymGTxCHkBpsJpm8Ah5AKUxyNU080tNHT55Vrcef0qHT54dmoO3B41tDQCUxqAO6GA7hKsIeQClMogDOnabwK1ayNOuAZAcJnCvIuQBJIcJ3KsIeQB7UsYJTrZDuIqePIC+lXWCc1ATuCkg5AH0rcwTnIOYwE0B7RoAfWOCs/wIeQB9Y4Kz/Ah5oAKymhxlgrP86MkDictycpQJzvIj5IHEZT05ygRnudGuARLH5Gi1EfJA4pgcrTZCHkgck6PVRk8eKNjOg6sHPXHJ5Gi1EfJAgfLaFoDJ0eqiXQMUiIOrkTVCHigQK1+QNdo1QE469d731Wtqdgh0Vr5gUAh5IAfdeu8fek9DT5xrXtOy2W3lS9aTtEgP7RogB91678++sKoTRw+pUa/Jkhr1mk4cPdQxuLd+UTTXWgpd/UVRhkM6UF7cyQM52K33fqMrX8q8dzvKizt5IAeD+NQpk7ToByEP5GAQnzplewL0g5AHcjA90bjh3ns3bE+AftCTB3Ky10+dsj0B+kHIA0OE7QnQK9o1AJAwQh4AEkbIA0DCCHkASFjmIW/7XtvLti/ZPp71eACAqzINedsjkj4l6T5Jt0t60PbtWY4JALgq6zv5OyRdiogXI+J7kh6TdCTjMQEAbVmHfEPSy9seX25fu8L2MduLthdXV1czLgcAqiXrkHeHa3HNg4hTETEZEZNjY2MZlwMA1ZL1J14vSzqw7fF+SSsZjwkUioM9UCZZh/zXJd1m+1ZJTUkPSPpwxmMChel2ApQkgh6FyLRdExGvS3pE0oKk5yU9HhEXsxwTKNJuB3sARch8g7KI+IKkL2Q9DlAG3Q7waK61dPjkWVo4yB2feAUGqNsBHpY4mxWFIOSBAep0sIe1Y0mZaOEgP4Q8MECdToDaGfBbOJsVeeDQECSrqKWMOw/2OHzyrJodAp2zWZEH7uSRpK2ljGXog3M2K4pEyCNJZVrKOIhDvIF+0a5Bkrr1u4vqg3M2K4rCnTyS1K3fTR8cVUPII0n0wYFNtGuQpK3WCBuFoeoIeSSLPjhAuwYAkkbIA0DCCHkASBghDwAJI+QBIGGEPAAkjJAHgIQR8gCQMEIeABJGyANAwgh5AEgYIQ8ACSPkASBhhDwAJIyQB4CEEfIAkDBCHgASRsgDQMIIeQBIGCEPAAkj5AEgYYQ8ACSMkAeAhN1UdAFAJ/NLTc0tLGtlraV99ZpmpsY1PdEouixg6BDyKJ35paZmT59Xa31DktRca2n29HlJIuiBHmXWrrH9+7abtp9r//e+rMZCWuYWlq8E/JbW+obmFpZ3/XvzS00dPnlWtx5/SodPntX8UjPLMoGhkPWd/Ccj4g8zHgOJWVlr9XRd4u4f6IaJV5TOvnqtp+tS/3f/QOqyDvlHbH/L9qdtv73TN9g+ZnvR9uLq6mrG5WAYzEyNqzY6cs212uiIZqbGu/6dfu7+gSrYU8jbfsb2hQ7/HZH0Z5J+XNK7Jb0i6Y86vUZEnIqIyYiYHBsb20s5SMT0REMnjh5So16TJTXqNZ04emjXtks/d/9AFeypJx8Rd93I99n+S0mf38tYqJbpiUZPvfSZqfFrevLS9e/+gSrIbOLV9rsi4pX2ww9KupDVWMDWLwTW1gPXynJ1zR/YfrekkPSSpN/McCyg57t/oAoyC/mI+EhWrw0AuDEsoQSAhBHyAJAwQh4AEkbIA0DCCHkASBghDwAJI+QBIGGEPAAkjJAHgIQR8gCQMEIeABJGyANAwgh5AEgYIQ8ACSPkASBhhDwAJIyQB4CEEfIAkDBCHgASRsgDQMIIeQBIGCEPAAkj5AEgYYQ8ACSMkAeAhBHyAJCwm4ouoKzml5qaW1jWylpL++o1zUyNa3qiUXRZANATQr6D+aWmZk+fV2t9Q5LUXGtp9vR5SSLoAQwV2jUdzC0sXwn4La31Dc0tLBdUEQD0h5DvYGWt1dN1ACgr2jV6c/+9/oOj+q//XX/T9+2r1wqoDgD6V/mQ79R/H32LNTpirW/Ele+rjY5oZmq8qDIBoC+Vb9d06r+vvxF66/fdpEa9Jktq1Gs6cfQQk64Ahk7l7+S79dn/u7Wu537vnpyrAYDBqvydfLc+O/13ACnYU8jb/lXbF22/YXtyx3Ozti/ZXrY9tbcyszMzNa7a6Mg11+i/A0jFXts1FyQdlfQX2y/avl3SA5J+StI+Sc/Y/omI2HjzSxRrq8/Op1sBpGhPIR8Rz0uS7Z1PHZH0WET8n6R/tX1J0h2SvraX8bIyPdEg1AEkKauefEPSy9seX25fAwDk6Lp38rafkfTODk89GhFPdvtrHa5Fh2uyfUzSMUm65ZZbrlcOAKAH1w35iLirj9e9LOnAtsf7Ja10ef1Tkk5J0uTkZMdfBACA/mTVrvmcpAdsf7/tWyXdJumfMhoLANDFXpdQftD2ZUm/IOkp2wuSFBEXJT0u6Z8lfVHSw2VcWQMAqdvr6pozks50ee4Tkj6xl9cHAOxN5T/xCgApI+QBIGGEPAAkjJAHgIQR8gCQsCT2k995fB8bjAHApqEP+U7H982ePi9JBD2Ayhv6dk2n4/ta6xuaW1guqCIAKI+hD/lux/d1uw4AVTL0Ic/xfQDQ3dCHPMf3AUB3Qz/xyvF9ANDd0Ie8xPF9ANDN0LdrAADdEfIAkDBCHgASRsgDQMIIeQBImCOi6BqusL0q6TtF13EdN0t6regiClb196DqP7/Ee1C2n//HImKs0xOlCvlhYHsxIiaLrqNIVX8Pqv7zS7wHw/Tz064BgIQR8gCQMEK+d6eKLqAEqv4eVP3nl3gPhubnpycPAAnjTh4AEkbIA0DCCPk9sP1x22H75qJryZvtOdsv2P6W7TO260XXlAfb99petn3J9vGi68mT7QO2n7X9vO2Ltj9adE1FsT1ie8n254uu5XoI+T7ZPiDpbkn/VnQtBXla0k9HxM9I+hdJswXXkznbI5I+Jek+SbdLetD27cVWlavXJf1WRPykpJ+X9HDFfv7tPirp+aKLuBGEfP8+Kem3JVVy5joivhQRr7cf/oOk/UXWk5M7JF2KiBcj4nuSHpN0pOCachMRr0TEN9pff1ebIVe5gxxs75f0fkl/VXQtN4KQ74PtD0hqRsQ3i66lJH5d0t8XXUQOGpJe3vb4sioYcpJk+6CkCUn/WGwlhfgTbd7gvVF0ITciiZOhsmD7GUnv7PDUo5J+V9I9+VaUv93eg4h4sv09j2rzn/GfzbO2grjDtcr9S872D0l6QtLHIuJ/iq4nT7bvl/RqRJyz/d6i67kRhHwXEXFXp+u2D0m6VdI3bUubbYpv2L4jIv49xxIz1+092GL7IUn3S7ozqvGBi8uSDmx7vF/SSkG1FML2qDYD/rMRcbroegpwWNIHbL9P0g9I+mHbfxMRv1ZwXV3xYag9sv2SpMmIKNOOdJmzfa+kP5b0SxGxWnQ9ebB9kzYnme+U1JT0dUkfjoiLhRaWE2/e1XxG0n9GxMeKrqdo7Tv5j0fE/UXXsht68ujXn0p6m6SnbT9n+8+LLihr7YnmRyQtaHPS8fGqBHzbYUkfkfQr7f/nz7XvaFFi3MkDQMK4kweAhBHyAJAwQh4AEkbIA0DCCHkASBghDwAJI+QBIGH/D57bqW52O99mAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set the random seed so the program will always generate the same data\n",
    "np.random.seed(0)\n",
    "\n",
    "# Generate n random x values between -5 and 5\n",
    "n = 20\n",
    "x = 10 * np.random.rand(n) - 5\n",
    "\n",
    "# Generate y values from the model y ~= 2x - 1\n",
    "epsilon = np.random.randn(n)\n",
    "y = -1 + 2*x + epsilon\n",
    "\n",
    "plt.plot(x, y, marker='o', linestyle='none')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# TODO: implement the cost function\n",
    "The squared error cost function is\n",
    "$$\\frac{1}{2} \\sum_{i=1}^m \\big(h_\\theta(x^{(i)}) - y^{(i)}\\big)^2.$$\n",
    "Open the file ``gd.py`` and implement ``cost_function``. Then run this cell to test it out."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "104.77295199433607\n",
      "744.9538220768486\n",
      "14.090816198013721\n"
     ]
    }
   ],
   "source": [
    "print(cost_function(x, y, 0,  1))   # should print 104.772951994\n",
    "print(cost_function(x, y, 2, -1))   # should print 744.953822077\n",
    "print(cost_function(x, y, -1, 2))   # should print 14.090816198"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plotting setup\n",
    "Run this cell. It sets up a routine ``plot_model`` that will be called later to illustrate the progress of gradient descent."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 720x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Construct a dense grid of (theta_0, theta_1) values\n",
    "theta0_vals = np.linspace(-10, 10)\n",
    "theta1_vals = np.linspace(-10, 10)\n",
    "[THETA0, THETA1] = np.meshgrid(theta0_vals, theta1_vals)\n",
    "\n",
    "# Define a cost function that has x and y \"baked in\"\n",
    "def mycost(theta0, theta1):\n",
    "    return cost_function(x, y, theta0, theta1)\n",
    "\n",
    "# Now vectorize this cost function and apply it simultaneously to all\n",
    "# pairs in dense grid of (theta_0, theta_1) values\n",
    "mycost_vectorized = np.vectorize(mycost)\n",
    "J_SURF = mycost_vectorized(THETA0, THETA1)\n",
    "\n",
    "# Define the test inputs\n",
    "x_test = np.linspace(-5, 5, 100)\n",
    "\n",
    "fig = plt.figure(1, figsize=(10,4))\n",
    "\n",
    "# Create the figure\n",
    "def init_plot():\n",
    "    fig.clf();\n",
    "\n",
    "    # Build left subplot (cost function)\n",
    "    ax1 = fig.add_subplot(1, 2, 1); \n",
    "    ax1.contour(THETA0, THETA1, J_SURF, 20)\n",
    "    ax1.set_xlabel('Intercept theta_0')\n",
    "    ax1.set_ylabel('Slope theta_1')\n",
    "    ax1.set_xlim([-10, 10])\n",
    "    ax1.set_ylim([-10, 10])\n",
    "\n",
    "    # The data will be added later for these plot elements:\n",
    "    line, = ax1.plot([], []);\n",
    "    dot,  = ax1.plot([], [], marker='o');\n",
    "\n",
    "    # Build right subplot (data + current hypothesis)\n",
    "    ax2 = fig.add_subplot(1, 2, 2);\n",
    "    ax2.plot(x, y, marker='o', linestyle='none') \n",
    "    ax2.set_xlim([-6, 6])\n",
    "    ax2.set_ylim([-10, 10])\n",
    "\n",
    "    # The data will be added later for this:\n",
    "    hyp, = ax2.plot( x_test, 0*x_test )\n",
    "    \n",
    "    return line, dot, hyp\n",
    "\n",
    "\n",
    "# Define a function to update the plot\n",
    "def update_plot(theta_0, theta_1, line, dot, hyp):\n",
    "    line.set_xdata( np.append(line.get_xdata(), theta_0 ) )\n",
    "    line.set_ydata( np.append(line.get_ydata(), theta_1 ) )\n",
    "    dot.set_xdata([theta_0])\n",
    "    dot.set_ydata([theta_1])\n",
    "    hyp.set_ydata( theta_0 + theta_1 * x_test )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "# TODO: implement gradient descent\n",
    "\n",
    "In this cell you will implement gradient descent. Follow these steps:\n",
    "\n",
    "1. Review the mathematical expressions for $\\frac{\\partial}{\\partial \\theta_0} J(\\theta_0, \\theta_1)$ and $\\frac{\\partial}{\\partial \\theta_1} J(\\theta_0, \\theta_1)$ for our model and cost funtion. (**Hint**: they are in the slides!)\n",
    "1. Implement the function ``gradient`` in ``gd.py`` to return these two partial derivatives.\n",
    "1. Complete the code below for gradient descent\n",
    "    * Select a step size\n",
    "    * Run for a fixed number of iterations (say, 20 or 200)\n",
    "    * Update theta_0 and theta_1 using the partial derivatives\n",
    "    * Record the value of the cost function attained in each iteration of gradient descent so you can examine its progress."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "line, dot, hyp = init_plot()\n",
    "\n",
    "iters = 100 # change as needed\n",
    "\n",
    "# TODO: intialize theta_0, theta_1, and step size\n",
    "theta_0 = 0\n",
    "theta_1 = 5\n",
    "step_size = 0.01\n",
    "\n",
    "cost = []\n",
    "\n",
    "for i in range(0, iters):\n",
    "    \n",
    "    # Uncomment the code below to display progress of the algorithm so far\n",
    "    # as it runs. \n",
    "    #\n",
    "    clear_output(wait=True)\n",
    "    update_plot(theta_0, theta_1, line, dot, hyp)\n",
    "    display(fig)\n",
    "    \n",
    "    \n",
    "    # TODO: write code to get partial derivatives (hint: call gradient in gd.py) \n",
    "    # and update theta_0 and theta_1\n",
    "    \n",
    "    \n",
    "    theta_0 = theta_0 - (1/2)*step_size*gradient(x,y,theta_0,theta_1)[0]\n",
    "    theta_1 = theta_1 - (1/2)*step_size*gradient(x,y,theta_0,theta_1)[1]\n",
    "    cost.append(cost_function(x, y, theta_0,  theta_1))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# TODO: assess convergence\n",
    "Plot the cost function vs. iteration. Did the algorithm converge? (Converging means it found the actual setting of $\\theta$ that minimizes the cost. If the cost went up or did not go down as far as it could, it did not converge.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "xv = []\n",
    "for i in range(iters):\n",
    "    xv.append(i)\n",
    "plt.plot(xv, cost)\n",
    "plt.xlabel(\"Iterations\")\n",
    "plt.ylabel(\"Cost\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# TODO: experiment with step size\n",
    "\n",
    "After you have completed the implementation, do some experiments with different numbers of iterations and step sizes to assess convergence of the algorithm. Report the following:\n",
    "* A step size for which the algorithm converges to the minimum in at most 200 iterations\n",
    "* A step size for which the algorithm converges, but it takes more than 200 iterations\n",
    "* A step size for which the algorithm does not converge, no matter how many iterations are run"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** *Write your answer here*. **\n",
    "* A step size for which the algorithm converges to the minimum in at most 200 iterations: 0.002\n",
    "* A step size for which the algorithm converges, but it takes more than 200 iterations: 0.00001\n",
    "* A step size for which the algorithm does not converge, no matter how many iterations are run: 0.6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
